<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wallet - <%= username %>
    </title>
    <link rel="stylesheet" href="/css/header.css">
    <link rel="stylesheet" href="/css/profileSidebar.css">
    <link rel="stylesheet" href="/css/wallet.css">
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css">
    
    <style>
        /* Enhanced styles for scrollable transactions */
        .transactions-section {
            position: relative;
        }
        
        .transactions-list {
            max-height: 400px;
            overflow-y: auto;
            padding-right: 8px;
            margin-right: -8px;
        }
        
        .transactions-list::-webkit-scrollbar {
            width: 6px;
        }
        
        .transactions-list::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 3px;
        }
        
        .transactions-list::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 3px;
        }
        
        .transactions-list::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }
        
        .show-all-toggle {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s ease;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 6px;
        }
        
        .show-all-toggle:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }
        
        .show-all-toggle i {
            transition: transform 0.3s ease;
        }
        
        .show-all-toggle.expanded i {
            transform: rotate(180deg);
        }
        
        .transaction-count {
            background: rgba(255, 255, 255, 0.2);
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            margin-left: 4px;
        }
        
        .transactions-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .fade-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 16px;
            height: 30px;
            background: linear-gradient(transparent, rgba(255, 255, 255, 0.9));
            pointer-events: none;
            transition: opacity 0.3s ease;
        }
        
        .fade-overlay.hidden {
            opacity: 0;
        }
        
        .transaction-item {
            animation: slideIn 0.3s ease forwards;
            opacity: 0;
            transform: translateY(10px);
        }
        
        @keyframes slideIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .transaction-item:nth-child(1) { animation-delay: 0.1s; }
        .transaction-item:nth-child(2) { animation-delay: 0.2s; }
        .transaction-item:nth-child(3) { animation-delay: 0.3s; }
        .transaction-item:nth-child(4) { animation-delay: 0.4s; }
        .transaction-item:nth-child(5) { animation-delay: 0.5s; }
    </style>
</head>

<body>

    <!-- Include your header here -->
    <%- include('../partials/user/header.ejs') %>

        
            <div class="wallet-wrapper">
                <!-- Include Profile Sidebar -->
                <%- include('../partials/user/profileSidebar.ejs') %>

                    <!-- Main Wallet Content -->
                    <div class="wallet-main-content">
                        <div class="wallet-container">
                            <div class="breadcrumb">
                                <a href="/profile">Profile</a>
                                <i class="fas fa-chevron-right"></i>
                                <span>My Wallet</span>
                            </div>
                        <div class="wallet-header">
                            <i class="fa-solid fa-wallet fa-2x" style="color: #6366f1;"></i>
                            <h1 class="page-title">My Wallet</h1>
                            
                        </div>

                        <!-- Wallet Balance Card -->
                        <div class="balance-card">
                            <div class="balance-header">
                                <div class="balance-icon">
                                    <i class="bi bi-wallet2"></i>
                                </div>
                                <div class="balance-info">
                                    <h3>Current Balance</h3>
                                    <div class="balance-amount">₹<%= wallet.balance.toLocaleString('en-IN') %>
                                    </div>
                                </div>
                            </div>
                            <div class="balance-actions">
                                <button class="btn btn-primary add-money-btn" data-bs-toggle="modal"
                                    data-bs-target="#addMoneyModal">
                                    <i class="bi bi-plus-circle"></i>
                                    Add Money
                                </button>
                            </div>
                        </div>

                        <!-- Recent Transactions -->
                        <div class="transactions-section">
                            <div class="transactions-header">
                                <h3>Recent Transactions</h3>
                                <% if (wallet.transactions.length> 0) { %>
                                    <button class="show-all-toggle" id="showAllBtn">
                                        <span id="toggleText">Show All</span>
                                        <span class="transaction-count"><%= wallet.transactions.length %></span>
                                        <i class="bi bi-chevron-down"></i>
                                    </button>
                                <% } %>
                            </div>

                            <div class="transactions-list-container" style="position: relative;">
                                <div class="transactions-list" id="transactionsList">
                                    <% if (wallet.transactions.length===0) { %>
                                        <!-- No Transactions -->
                                        <div class="no-transactions">
                                            <div class="no-transactions-icon">
                                                <i class="bi bi-inbox"></i>
                                            </div>
                                            <h4>No transactions yet</h4>
                                            <p>Start by adding money to your wallet or making a purchase</p>
                                        </div>
                                    <% } else { %>
                                        <!-- Show all transactions (sorted by date) -->
                                        <% const sortedTransactions = wallet.transactions.sort((a, b) => new Date(b.date) - new Date(a.date)); %>
                                        <% sortedTransactions.forEach((transaction, index) => { %>
                                            <div class="transaction-item <%= index >= 5 ? 'hidden-transaction' : '' %>">
                                                <div class="transaction-icon">
                                                    <% if (transaction.type==='credit' ) { %>
                                                        <i class="bi bi-arrow-down-circle text-success"></i>
                                                    <% } else { %>
                                                        <i class="bi bi-arrow-up-circle text-danger"></i>
                                                    <% } %>
                                                </div>
                                                <div class="transaction-details">
                                                    <h5><%= transaction.description %></h5>
                                                    <p class="transaction-date">
                                                        <%= new Date(transaction.date).toLocaleDateString('en-IN', {
                                                            year: 'numeric', month: 'long', day: 'numeric',
                                                            hour: '2-digit', minute: '2-digit'
                                                        }) %>
                                                    </p>
                                                </div>
                                                <div class="transaction-amount <%= transaction.type %>">
                                                    <% if (transaction.type==='credit' ) { %>
                                                        +₹<%= transaction.amount.toLocaleString('en-IN') %>
                                                    <% } else { %>
                                                        -₹<%= transaction.amount.toLocaleString('en-IN') %>
                                                    <% } %>
                                                </div>
                                            </div>
                                        <% }); %>
                                    <% } %>
                                </div>
                                <div class="fade-overlay" id="fadeOverlay"></div>
                            </div>
                        </div>
                    </div>
                        </div>
            </div>
        

        <!-- Add Money Modal -->
        <div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addMoneyModalLabel">Add Money to Wallet</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form id="addMoneyForm" action="/profile/wallet/add" method="POST">
                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="amount" class="form-label">Amount (₹)</label>
                                <input type="number" class="form-control" id="amount" name="amount" min="1" max="50000"
                                    required>
                                <div class="form-text">Minimum: ₹1, Maximum: ₹50,000</div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Quick Select</label>
                                <div class="quick-amounts">
                                    <button type="button" class="btn btn-outline-primary quick-amount"
                                        data-amount="500">₹500</button>
                                    <button type="button" class="btn btn-outline-primary quick-amount"
                                        data-amount="1000">₹1000</button>
                                    <button type="button" class="btn btn-outline-primary quick-amount"
                                        data-amount="2000">₹2000</button>
                                    <button type="button" class="btn btn-outline-primary quick-amount"
                                        data-amount="5000">₹5000</button>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="description" class="form-label">Description (Optional)</label>
                                <input type="text" class="form-control" id="description" name="description"
                                    placeholder="e.g., Wallet top-up">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-credit-card"></i>
                                Add Money
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

        <!-- Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Quick amount selection
                const quickAmountBtns = document.querySelectorAll('.quick-amount');
                const amountInput = document.getElementById('amount');

                quickAmountBtns.forEach(btn => {
                    btn.addEventListener('click', function () {
                        quickAmountBtns.forEach(b => b.classList.remove('selected'));
                        this.classList.add('selected');
                        const amount = this.getAttribute('data-amount');
                        amountInput.value = amount;
                    });
                });

                amountInput.addEventListener('input', function () {
                    quickAmountBtns.forEach(btn => btn.classList.remove('selected'));
                });

                // Add money form handling
                const addMoneyForm = document.getElementById('addMoneyForm');
                addMoneyForm.addEventListener('submit', function (e) {
                    const amount = parseInt(amountInput.value);

                    if (amount < 1 || amount > 50000) {
                        e.preventDefault();
                        iziToast.error({
                            title: 'Invalid Amount',
                            message: 'Please enter an amount between ₹1 and ₹50,000',
                            position: 'bottomRight'
                        });
                        return;
                    }

                    const submitBtn = this.querySelector('button[type="submit"]');
                    const originalText = submitBtn.innerHTML;
                    submitBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> Processing...';
                    submitBtn.disabled = true;

                    setTimeout(() => {
                        submitBtn.innerHTML = originalText;
                        submitBtn.disabled = false;
                    }, 10000);
                });

                // Balance formatting
                const balanceAmount = document.querySelector('.balance-amount');
                if (balanceAmount) {
                    const balance = '<%= wallet.balance %>';
                    balanceAmount.textContent = '₹' + parseInt(balance).toLocaleString('en-IN');
                }

                // Show/Hide all transactions functionality
                const showAllBtn = document.getElementById('showAllBtn');
                const transactionsList = document.getElementById('transactionsList');
                const fadeOverlay = document.getElementById('fadeOverlay');
                const toggleText = document.getElementById('toggleText');
                let showingAll = false;

                if (showAllBtn) {
                    // Initially hide transactions beyond the first 5
                    const hiddenTransactions = document.querySelectorAll('.hidden-transaction');
                    hiddenTransactions.forEach(transaction => {
                        transaction.style.display = 'none';
                    });

                    // Show fade overlay if there are more than 5 transactions
                    if (hiddenTransactions.length > 0) {
                        fadeOverlay.style.display = 'block';
                    } else {
                        fadeOverlay.style.display = 'none';
                    }

                    showAllBtn.addEventListener('click', function () {
                        showingAll = !showingAll;
                        
                        if (showingAll) {
                            // Show all transactions
                            hiddenTransactions.forEach((transaction, index) => {
                                setTimeout(() => {
                                    transaction.style.display = 'flex';
                                    transaction.style.animation = `slideIn 0.3s ease forwards`;
                                    transaction.style.animationDelay = `${index * 0.1}s`;
                                }, index * 50);
                            });
                            
                            toggleText.textContent = 'Show Less';
                            showAllBtn.classList.add('expanded');
                            fadeOverlay.classList.add('hidden');
                            
                            // Enable scrolling
                            transactionsList.style.maxHeight = '400px';
                            transactionsList.style.overflowY = 'auto';
                        } else {
                            // Hide extra transactions
                            hiddenTransactions.forEach(transaction => {
                                transaction.style.display = 'none';
                            });
                            
                            toggleText.textContent = 'Show All';
                            showAllBtn.classList.remove('expanded');
                            fadeOverlay.classList.remove('hidden');
                            
                            // Disable scrolling
                            transactionsList.style.maxHeight = 'none';
                            transactionsList.style.overflowY = 'visible';
                            transactionsList.scrollTop = 0;
                        }
                    });

                    // Handle scroll to hide/show fade overlay when all transactions are shown
                    transactionsList.addEventListener('scroll', function() {
                        if (showingAll) {
                            const isScrolledToBottom = transactionsList.scrollHeight - transactionsList.clientHeight <= transactionsList.scrollTop + 1;
                            if (isScrolledToBottom) {
                                fadeOverlay.style.opacity = '0';
                            } else {
                                fadeOverlay.style.opacity = '1';
                            }
                        }
                    });
                }

                // Toast notifications
                const urlParams = new URLSearchParams(window.location.search);
                const success = urlParams.get('success');
                const error = urlParams.get('error');

                if (success) {
                    iziToast.success({
                        title: 'Success',
                        message: decodeURIComponent(success),
                        position: 'bottomRight'
                    });
                }

                if (error) {
                    iziToast.error({
                        title: 'Error',
                        message: decodeURIComponent(error),
                        position: 'bottomRight'
                    });
                }
            });
        </script>

</body>

</html>