<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.name %> - LapZone</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="/css/header.css">
    <link rel="stylesheet" href="/css/productPage.css">
    <script src="https://unpkg.com/js-image-zoom@0.4.1/js-image-zoom.js" type="application/javascript"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css">
    <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
    <style>
        /* Styles for action buttons */
        .action-buttons {
            display: flex;
            flex-direction: row;
            gap: 1rem;
            margin-top: 1rem;
            width: 100%;
        }
        .product-title-section {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}

        .add-to-cart-btn, .buy-now-btn {
            flex: 1;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 4px;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.2s, transform 0.2s;
        }
        .add-to-cart-btn {
            background: #1e40af; /* --primary-color */
            color: #fff;
        }
        .add-to-cart-btn:hover {
            background: #3b82f6; /* --secondary-color */
            transform: translateY(-2px);
        }
        .buy-now-btn {
            background: #10b981; /* Green for Buy Now */
            color: #fff;
        }
        .buy-now-btn:hover {
            background: #059669;
            transform: translateY(-2px);
        }
        .add-to-cart-btn i, .buy-now-btn i {
            margin-left: 0.5rem;
            font-size: 1rem;
        }
        /* Styles for wishlist icon */
        .wishlist-icon-container {
            display: flex;
            justify-content: center;
            margin-top: 0.5rem;
        }
        .wishlist-icon {
           font-size: 1.75rem;
    color: #dc2626; /* red */
    cursor: pointer;
    transition: all 0.2s ease;
    padding: 8px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.8);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .wishlist-icon:hover {
             color: #b91c1c; /* darker red */
    transform: scale(1.1);
    background-color: rgba(255, 255, 255, 1);
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
        }
    </style>
</head>

<body>
    <%- include("../partials/user/header.ejs") %>

    <div class="product-container">
        <!-- Product Images -->
        <div class="product-images">
            <div id="mainImageContainer">
                <img src="<%= product.images.find(img => img.isMain)?.url || 'https://placehold.co/600x400' %>"
                     alt="<%= product.name %>" class="main-image" id="mainImage">
            </div>
            
            <div class="d-flex flex-wrap">
                <% product.images.forEach(img => { %>
                    <img src="<%= img.url %>" alt="<%= product.name %> thumbnail"
                         class="thumbnail <%= img.isMain ? 'active' : '' %>" onclick="changeImage('<%= img.url %>')">
                <% }) %>
                
            </div>
        </div>

        <!-- Product Details -->
        <div class="product-details">    
            <nav class="breadcrumb" id="breadcrumb"></nav>
            <div class="product-title-section">
                <h1><%= product.name %></h1>
                <div class="wishlist-icon-container d-flex">
                    <i class="bi <%= isWishlisted ? 'bi-heart-fill' : 'bi-heart' %> wishlist-icon"
                    onclick="addToWishlist('<%= product._id %>', this)"
                    title="Add to Wishlist"></i>
                </div>
            </div>
            <div class="rating">
                <% for (let i = 1; i <= 5; i++) { %>
                    <% if (i <= Math.floor(product.rating)) { %>
                        <span>★</span>
                    <% } else if (i === Math.ceil(product.rating) && product.rating % 1 !== 0) { %>
                        <span>☆</span>
                    <% } else { %>
                        <span>☆</span>
                    <% } %>
                <% } %>
                <span class="text-muted ms-2">(<%= product.rating.toLocaleString('en-IN', {
                    minimumFractionDigits: 1, maximumFractionDigits: 1 }) %>/5)</span>
            </div>
            <% if (product.regularPrice && product.salePrice < product.regularPrice) { %>
                <div class="price">
                    ₹<%= product.salePrice.toLocaleString('en-IN') %>
                    <del>₹<%= product.regularPrice.toLocaleString('en-IN') %></del>
                </div>
            <% } else { %>
                <div class="price">₹<%= product.salePrice.toLocaleString('en-IN') %></div>
            <% } %>
            <div class="description">
                <%= product.description || 'No description available.' %>
            </div>
            <div class="offers">
                <ul>
                    <% if (product.offer && product.offer > 0) { %>
                        <li><%= product.offer %>% off on this product!</li>
                    <% } else { %>
                        <li>No offers available.</li>
                    <% } %>
                </ul>
            </div>
            <div class="variant-selector">
                <div>RAM</div>
                <div class="variant-options">
                    <% product.variants.forEach(variant => { %>
                        <button class="variant-btn <%= variant.RAM === product.variants[0].RAM ? 'active' : '' %>"
                                onclick="selectVariant(this, 'RAM', '<%= variant.RAM %>')">
                            <%= variant.RAM %>
                        </button>
                    <% }) %>
                </div>
                <div>Storage</div>
                <div class="variant-options">
                    <% product.variants.forEach(variant => { %>
                        <button class="variant-btn <%= variant.Storage === product.variants[0].Storage ? 'active' : '' %>"
                                onclick="selectVariant(this, 'Storage', '<%= variant.Storage %>')">
                            <%= variant.Storage %>
                        </button>
                    <% }) %>
                </div>
            </div>
            <!-- Action Buttons: Add to Cart and Buy Now -->
            <div class="action-buttons">
                <button class="add-to-cart-btn mt-0 btn btn-warning" onclick="addToCart('<%= product._id %>')">
                    Add to Cart <i class="bi bi-cart-plus"></i>
                </button>
                <button class="buy-now-btn" onclick="buyNow('<%= product._id %>')">
                    Buy Now <i class="bi bi-lightning-fill"></i>
                </button>
            </div>
        </div>
    </div>

    <div class="container my-5 px-3 px-md-5">
        <div class="specifications">
            <h2>Specifications</h2>
            <dl>
                <% if (product.name) { %>
                    <dt>Model Name</dt>
                    <dd><%= product.name %></dd>
                <% } %>
                <% if (product.brand) { %>
                    <dt>Brand</dt>
                    <dd><%= product.brand %></dd>
                <% } %>
                <% if (product.modelNumber) { %>
                    <dt>Model Number</dt>
                    <dd><%= product.modelNumber %></dd>
                <% } %>
                <% if (product.category) { %>
                    <dt>Category</dt>
                    <dd><%= product.category %></dd>
                <% } %>
                <% if (product.color) { %>
                    <dt>Colour</dt>
                    <dd><%= product.color %></dd>
                <% } %>
                <% if (product.CPU) { %>
                    <dt>Processor</dt>
                    <dd><%= product.CPU %></dd>
                <% } %>
                <% if (product.OS) { %>
                    <dt>Operating System</dt>
                    <dd><%= product.OS %></dd>
                <% } %>
                <% if (product.screen) { %>
                    <dt>Display</dt>
                    <dd><%= product.screen %></dd>
                <% } %>
                <% if (product.webcam) { %>
                    <dt>Web Camera</dt>
                    <dd><%= product.webcam %></dd>
                <% } %>
                <% if (product.ports && product.ports.length > 0) { %>
                    <% product.ports.forEach(portEntry => { %>
                        <% if (portEntry['USB Type-A']) { %>
                            <dt>USB Type-A</dt>
                            <dd><%= portEntry['USB Type-A'] %></dd>
                        <% } %>
                        <% if (portEntry['USB Type-C']) { %>
                            <dt>USB Type-C</dt>
                            <dd><%= portEntry['USB Type-C'] %></dd>
                        <% } %>
                        <% if (portEntry['HDMI']) { %>
                            <dt>HDMI</dt>
                            <dd><%= portEntry['HDMI'] %></dd>
                        <% } %>
                        <% if (portEntry['AudioJack']) { %>
                            <dt>Audio Jack</dt>
                            <dd><%= portEntry['AudioJack'] %></dd>
                        <% } %>
                        <% if (portEntry['LAN']) { %>
                            <dt>LAN</dt>
                            <dd><%= portEntry['LAN'] %></dd>
                        <% } %>
                        <% if (portEntry['Card Reader']) { %>
                            <dt>Card Reader</dt>
                            <dd><%= portEntry['Card Reader'] %></dd>
                        <% } %>
                    <% }) %>
                <% } %>
                <% if (product.warranty) { %>
                    <dt>Warranty</dt>
                    <dd><%= product.warranty %></dd>
                <% } %>
            </dl>
        </div>
    </div>

    <section class="suggestions">
    <h1>Suggestions</h1>
    <div class="suggestions-grid">
        <% productSuggesions.forEach(suggestion => { 
            const mainImage = suggestion.images.find(img => img.isMain);
            const variant = suggestion.variants?.[0];
        %>
        <div class="suggestion">
            <a href="/products/<%= suggestion._id %>">
                <img src="<%= mainImage?.url || '/default-image.jpg' %>" alt="<%= suggestion.name %>">
                <div class="card-body">
                    <h5><%= suggestion.name %></h5>
                    <div class="rating">
                        <% for (let i = 1; i <= 5; i++) { %>
                            <span class="<%= i <= suggestion.rating ? 'filled' : '' %>">
                                <%= i <= suggestion.rating ? '★' : '☆' %>
                            </span>
                        <% } %>
                    </div>
                    <p class="card-text"><%= suggestion.description.substring(0, 100) %>...</p>
                </div>
                <div class="card-footer">
                    ₹<%= suggestion.salePrice || 'N/A' %>
                </div>
            </a>
        </div>
        <% }); %>
    </div>
</section>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    <script>
        let options = {
            width: 570,
            zoomWidth: 350,
            offset: { vertical: 0, horizontal: 10 },
            zoomStyle: 'z-index: 1000;'
        }

        new ImageZoom(document.getElementById("mainImageContainer"), options);

        // Change main image on thumbnail click
        function changeImage(url) {
            document.getElementById('mainImage').src = url;
            document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
            event.target.classList.add('active');
        }

        // Select variant (RAM or Storage)
        function selectVariant(btn, type, value) {
            const buttons = document.querySelectorAll(`.variant-btn`);
            buttons.forEach(b => {
                if (b.textContent.trim() === value && b !== btn) {
                    b.classList.remove('active');
                }
            });
            btn.classList.add('active');
        }

        // Add to cart function
        async function addToCart(productId) {
    try {
        const response = await fetch("/cart/add-to-cart", {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({ productId })
        });

        if (!response.ok) {
            throw new Error('Network response was not ok');
        }

        const result = await response.json();

        if (result.success) {
            if (result.success === 'true') {
                iziToast.success({
                    title: '',
                    message: 'Product added to cart',
                    position: 'topRight',
                    timeout: 2000
                });
            } else if (result.success === 'false') {
                iziToast.warning({
                    title: '',
                    message: "Cart limit reached",
                    position: 'topRight',
                    timeout: 2000
                });
            }
        } else {
            iziToast.error({
                title: 'Error',
                message: 'Cart limit exceeded',
                position: 'topRight',
                timeout: 2000
            });
        }
    } catch (error) {
        console.error('Error:', error);
        iziToast.error({
            title: 'Error',
            message: 'An error occurred while adding to cart',
            position: 'topRight',
            timeout: 2000
        });
    }
}

            




        // Buy now function
        function buyNow(productId) {
            const selectedRAM = document.querySelector('.variant-options .variant-btn.active').textContent.trim();
            const selectedStorage = document.querySelectorAll('.variant-options')[1].querySelector('.variant-btn.active').textContent.trim();
            console.log(`Buying now: ${productId} with RAM: ${selectedRAM} and Storage: ${selectedStorage}`);
            alert('Redirecting to checkout...');
        }

        // Add to wishlist function
        function addToWishlist(productId, icon) {
            fetch("/wishlist/toggle", {
                method: "POST",
                headers: {
                    'Content-Type': "application/json"
                },
                body: JSON.stringify({ productId })
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    if (result.action === 'added') {
                        iziToast.success({
                            title: '',
                            message: 'Product added to Wishlist',
                            position: 'topRight',
                            timeout: 2000
                        });
                        icon.classList.remove('bi-heart');
                        icon.classList.add('bi-heart-fill');
                    } else {
                        iziToast.success({
                            title: '',
                            message: 'Product removed from Wishlist',
                            position: 'topRight',
                            timeout: 2000
                        });
                        icon.classList.remove('bi-heart-fill');
                        icon.classList.add('bi-heart');
                    }
                } else {
                    window.location.href = "/login";
                }
            })
            .catch(error => {
                console.error("Error toggling wishlist:", error);
                iziToast.error({
                    title: 'Error',
                    message: 'Something went wrong.',
                    position: 'topRight',
                    timeout: 2000
                });
            });
        }


         const productName = "<%= product.name %>"; 

        function generateBreadcrumb() {
            const breadcrumbContainer = document.getElementById("breadcrumb");
            const pathArray = window.location.pathname.split("/").filter(p => p);

            const isID = (segment) => /^[0-9a-fA-F]{24}$/.test(segment) || /^\d+$/.test(segment);

            let breadcrumbHTML = `<a href="/">Home</a>`;
        let fullPath = "";

        pathArray.forEach((segment, index) => {
            const isLast = index === pathArray.length - 1;
            const nextIsID = isLast ? false : isID(pathArray[index + 1]);

            if (isID(segment)) return;

            fullPath += `/${segment}`;

            if (nextIsID || isLast) {
                // Replace 'product' with the actual product name
                const label = (segment.toLowerCase() === 'product') ? productName : decodeURIComponent(segment);
                breadcrumbHTML += ` <span>›</span> <span>${label}</span>`;
            } else {
                breadcrumbHTML += ` <span>›</span> <a href="${fullPath}">${decodeURIComponent(segment)}</a>`;
            }
        });

        breadcrumbContainer.innerHTML = breadcrumbHTML;
    }


        document.addEventListener("DOMContentLoaded", generateBreadcrumb);
    </script>
</body>
</html>