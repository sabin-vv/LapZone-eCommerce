<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Sign Up - Your App</title>

  <!-- Tailwind CSS CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Google Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />

  <style>
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh; /* Ensure body takes full viewport height */
      overflow-y: auto; /* Allow scrolling if content overflows */
    }

    .glass-effect {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .floating {
      animation: float 6s ease-in-out infinite;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-10px); }
    }

    .modal-backdrop {
      background: rgba(0, 0, 0, 0.6);
      backdrop-filter: blur(4px);
    }

    .modal-enter {
      animation: modalEnter 0.3s ease-out;
    }

    @keyframes modalEnter {
      from {
        opacity: 0;
        transform: scale(0.9) translateY(-20px);
      }
      to {
        opacity: 1;
        transform: scale(1) translateY(0);
      }
    }

    .input-focus-effect {
      transition: all 0.2s ease;
    }

    .input-focus-effect:focus {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(99, 102, 241, 0.15);
    }

    /* Ensure modal content is scrollable on small screens */
    .modal-content {
      max-height: 90vh;
      overflow-y: auto;
    }

    /* Adjust decorative elements to stay behind content */
    .decorative {
      z-index: 0;
    }
  </style>
</head>

<body class="flex flex-col items-center justify-start p-4">
  <!-- Background decorative elements -->
  <div class="absolute inset-0 overflow-hidden pointer-events-none decorative">
    <div class="absolute -top-40 -right-40 w-80 h-80 bg-white opacity-10 rounded-full floating"></div>
    <div class="absolute -bottom-20 -left-20 w-60 h-60 bg-white opacity-5 rounded-full floating" style="animation-delay: -3s;"></div>
    <div class="absolute top-20 left-1/4 w-20 h-20 bg-white opacity-20 rounded-full floating" style="animation-delay: -1s;"></div>
  </div>

  <!-- Header with Lapzone Button -->
  <div class="w-full max-w-7xl  flex justify-between items-center  z-10">
    <div class="flex items-center gap-3">
      <!-- Logo placeholder -->
    </div>
    <a href="/" class="bg-white/20 backdrop-blur-sm text-white hover:bg-white/30 transition-all duration-200 px-4 py-2 rounded-lg font-medium flex items-center gap-2 border border-white/20">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
      </svg>
      Lapzone
    </a>
  </div>

  <!-- Main Sign Up Container -->
  <div class="w-full max-w-md glass-effect rounded-2xl shadow-2xl p-8 z-10 my-8">
    <!-- Profile/User Icon -->
    <div class="flex justify-center mb-6">
      <div class="w-16 h-16 bg-gradient-to-br from-green-500 to-blue-600 rounded-full flex items-center justify-center">
        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
        </svg>
      </div>
    </div>

    <h1 class="text-3xl font-bold text-center text-gray-800 mb-2">Create Account</h1>
    <p class="text-center text-gray-600 mb-8">Join us today and get started</p>
    <!-- Success/Error Message -->
    <% if (typeof message !== 'undefined' && message) { %>
      <div class="bg-green-100 text-green-700 text-sm p-3 rounded-lg mb-4 text-center">
        <%= message %>
      </div>
    <% } %>

    <form class="space-y-5" method="POST" action="/signup">
      <!-- Full Name -->
      <div class="relative">
        <div class="absolute top-1/2 -translate-y-1/2 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
          </svg>
        </div>
        <input type="text" name="fullname" placeholder="Full Name" 
          class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all input-focus-effect"
          value="<%= typeof formData !== 'undefined' ? formData.fullname : '' %>" />
        <% if (typeof errors !== 'undefined' && errors?.fullname) { %>
          <p class="text-red-500 text-xs mt-1 ml-2"><%= errors.fullname %></p>
        <% } %>
      </div>

      <!-- Email -->
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"></path>
          </svg>
        </div>
        <input type="email" name="email" placeholder="Email address" 
          class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all input-focus-effect"
          value="<%= typeof formData !== 'undefined' ? formData.email : '' %>" />
        <% if (typeof errors !== 'undefined' && errors?.email) { %>
          <p class="text-red-500 text-xs mt-1 ml-2"><%= errors.email %></p>
        <% } %>
      </div>

      <!-- Mobile -->
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
          </svg>
        </div>
        <input type="text" name="mobile" placeholder="Mobile Number" maxlength="10"
          class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all input-focus-effect"
          value="<%= typeof formData !== 'undefined' ? formData.mobile : '' %>" />
        <% if (typeof errors !== 'undefined' && errors?.mobile) { %>
          <p class="text-red-500 text-xs mt-1 ml-2"><%= errors.mobile %></p>
        <% } %>
      </div>

      <!-- Password -->
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
          </svg>
        </div>
        <input type="password" name="password" placeholder="Password" 
          class="w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all input-focus-effect" />
        <button type="button" onclick="togglePassword('password')" class="absolute inset-y-0 right-0 pr-3 flex items-center">
          <svg id="eye-icon-password" class="h-5 w-5 text-gray-400 hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
          </svg>
        </button>
        <% if (typeof errors !== 'undefined' && errors?.password) { %>
          <p class="text-red-500 text-xs mt-1 ml-2"><%= errors.password %></p>
        <% } %>
      </div>

      <!-- Confirm Password -->
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
        <input type="password" name="confpassword" placeholder="Confirm Password" 
          class="w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all input-focus-effect" />
        <button type="button" onclick="togglePassword('confpassword')" class="absolute inset-y-0 right-0 pr-3 flex items-center">
          <svg id="eye-icon-confpassword" class="h-5 w-5 text-gray-400 hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
          </svg>
        </button>
        <% if (typeof errors !== 'undefined' && errors?.confpassword) { %>
          <p class="text-red-500 text-xs mt-1 ml-2"><%= errors.confpassword %></p>
        <% } %>
      </div>

      <!-- Referral Code Button -->
      <div class="flex items-center justify-center">
        <button id="referralTriggerBtn" type="button" onclick="openReferralModal()" 
          class="text-indigo-600 hover:text-indigo-800 font-medium flex items-center gap-2 transition-colors">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          Have a referral code?
        </button>
      </div>

      <!-- Hidden referral code input -->
      <input type="hidden" name="referralCode" id="referralCodeInput" value="">

      <!-- Submit Button -->
      <button type="submit"
        class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all duration-200 font-medium transform hover:scale-[1.02] active:scale-[0.98]">
        Create Account
      </button>

      <!-- Divider -->
      <div class="relative my-6">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-gray-300"></div>
        </div>
        <div class="relative flex justify-center text-sm">
          <span class="px-2 bg-white text-gray-500">Or continue with</span>
        </div>
      </div>

      <!-- Social Login Buttons -->
      <div class="space-y-3">
        <a href="/auth/google"
          class="w-full flex items-center justify-center gap-3 border border-gray-300 py-3 rounded-lg hover:bg-gray-50 transition-colors">
          <img src="https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg" alt="Google" class="h-5 w-5">
          <span class="font-medium">Sign up with Google</span>
        </a>
      </div>

      <!-- Login Link -->
      <p class="text-sm text-center mt-6 text-gray-600">
        Already have an account?
        <a href="/login" class="text-indigo-600 hover:text-indigo-800 font-medium">Log in</a>
      </p>
      
    </form>
  </div>

  <!-- Referral Code Modal -->
  <div id="referralModal" class="fixed inset-0 z-50 hidden">
    <!-- Backdrop -->
    <div class="absolute inset-0 modal-backdrop" onclick="closeReferralModal()"></div>

    <!-- Modal Content -->
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="glass-effect rounded-2xl shadow-2xl p-8 w-full max-w-md modal-enter modal-content">
        <!-- Modal Header -->
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-2xl font-bold text-gray-800">Referral Code</h3>
          <button onclick="closeReferralModal()" class="text-gray-400 hover:text-gray-600 transition-colors">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <!-- Modal Body -->
        <div class="space-y-4">
          <!-- Referral Code Input -->
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
              </svg>
            </div>
            <input type="text" id="referralCodeModal" placeholder="Type Your Referral code" maxlength="8"
              class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all input-focus-effect text-center text-lg tracking-widest uppercase"
              oninput="formatReferralCode(this)" />
              <% if(error !== undefined) { %>
              <p id="referralError" class="text-red-500 text-xs mt-1 ml-2"><%= error ? error : "" %></p>
              <% } %>
          </div>

          <!-- Benefits List -->
          <div class="bg-gradient-to-br from-indigo-50 to-purple-50 p-4 rounded-lg">
            <h4 class="font-semibold text-gray-800 mb-2">Referral Benefits:</h4>
            <ul class="text-sm text-gray-600 space-y-1">
              <li class="flex items-center gap-2">
                <svg class="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                Welcome bonus of ₹100
              </li>
              <li class="flex items-center gap-2">
                <svg class="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                Exclusive member discounts
              </li>
              <li class="flex items-center gap-2">
                <svg class="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                Priority customer support
              </li>
            </ul>
          </div>
        </div>

        <!-- Modal Footer -->
        <div class="flex gap-3 mt-6">
          <button onclick="closeReferralModal()" 
            class="flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium">
            Skip
          </button>
          <button onclick="applyReferralCode()" 
            class="flex-1 px-4 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all font-medium">
            Apply Code
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Toggle password visibility
    function togglePassword(fieldName) {
      const passwordInput = document.querySelector(`input[name="${fieldName}"]`);
      const eyeIcon = document.getElementById(`eye-icon-${fieldName}`);
      
      if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        eyeIcon.innerHTML = `
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
        `;
      } else {
        passwordInput.type = 'password';
        eyeIcon.innerHTML = `
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
        `;
      }
    }

    // Referral Modal Functions
    function openReferralModal() {
      document.getElementById('referralModal').classList.remove('hidden');
      document.getElementById('referralCodeModal').focus();
    }

    function closeReferralModal() {
      document.getElementById('referralModal').classList.add('hidden');
      document.getElementById('referralCodeModal').value = '';
    }

    function formatReferralCode(input) {
      input.value = input.value.toUpperCase().replace(/[^A-Z0-9]/g, '').substring(0, 8);
    }

    async function applyReferralCode() {
  const errorEl = document.getElementById('referralError');
  const codeInput = document.getElementById('referralCodeModal');
  const code = codeInput.value.trim().toUpperCase();

  // Reset any previous error
  errorEl.textContent = '';
  errorEl.classList.add('hidden');

  if (code.length !== 8 || !/^[A-Z0-9]{8}$/.test(code)) {
    errorEl.textContent = 'Please enter a valid 8-character referral code.';
    errorEl.classList.remove('hidden');
    return;
  }

  try {
    const response = await fetch('/signup/referral-code', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ code })
    });

    const data = await response.json();

    if (!data.success) {
      errorEl.textContent = data.message || 'Invalid code.';
      errorEl.classList.remove('hidden');
      return;
    }

    

    document.getElementById('referralTriggerBtn').innerHTML = `Referral code applied <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6 text-green-500">
  <path fill-rule="evenodd" d="M8.603 3.799A4.49 4.49 0 0 1 12 2.25c1.357 0 2.573.6 3.397 1.549a4.49 4.49 0 0 1 3.498 1.307 4.491 4.491 0 0 1 1.307 3.497A4.49 4.49 0 0 1 21.75 12a4.49 4.49 0 0 1-1.549 3.397 4.491 4.491 0 0 1-1.307 3.497 4.491 4.491 0 0 1-3.497 1.307A4.49 4.49 0 0 1 12 21.75a4.49 4.49 0 0 1-3.397-1.549 4.49 4.49 0 0 1-3.498-1.306 4.491 4.491 0 0 1-1.307-3.498A4.49 4.49 0 0 1 2.25 12c0-1.357.6-2.573 1.549-3.397a4.49 4.49 0 0 1 1.307-3.497 4.49 4.49 0 0 1 3.497-1.307Zm7.007 6.387a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" clip-rule="evenodd" />
</svg>
 ` ;
    // Set the hidden input so it's sent on form submit
    document.getElementById('referralCodeInput').value = code;

    // Show success animation
    const modalContent = document.querySelector('#referralModal .modal-content');
    modalContent.innerHTML = `
      <div class="text-center py-8">
        <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
        </div>
        <h3 class="text-2xl font-bold text-gray-800 mb-2">Code Applied!</h3>
        <p class="text-gray-600 mb-6">Referral code <strong>${code}</strong> has been applied successfully.</p>
        <button onclick="closeReferralModal()" 
          class="px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all font-medium">
          Continue
        </button>
      </div>
    `;

    setTimeout(() => {
      closeReferralModal();
      setTimeout(() => location.reload(), 300);
    }, 2000);

  } catch (error) {
    console.error('Error validating referral code:', error);
    errorEl.textContent = 'Something went wrong. Please try again.';
    errorEl.classList.remove('hidden');
  }
}

    // Close modal with Escape key
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape') {
        closeReferralModal();
      }
    });

    // Add focus effects to inputs
    document.addEventListener('DOMContentLoaded', function() {
      const inputs = document.querySelectorAll('input');
      inputs.forEach(input => {
        input.addEventListener('focus', function() {
          this.parentElement.style.transform = 'translateY(-2px)';
        });
        
        input.addEventListener('blur', function() {
          this.parentElement.style.transform = 'translateY(0)';
        });
      });
    });
  </script>
</body>
</html>