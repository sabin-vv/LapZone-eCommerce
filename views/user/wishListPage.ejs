<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LapZone - Wishlist</title>
    <link rel="stylesheet" href="/css/header.css">
    <link rel="stylesheet" href="/css/profileSidebar.css">
    <link rel="stylesheet" href="/css/wishListPage.css">
    <link rel="stylesheet" href="/css/universal-floating-elements.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
</head>

<body>
    <div class="page-container">
        <%- include("../partials/user/header.ejs") %>

        <div class="main-container">
        <%- include("../partials/user/universalSidebar.ejs") %>

        <div class="content">
            <div class="wishlist-container">
                <div class="breadcrumb">
                    <a href="/profile">Profile</a>
                    <i class="fas fa-chevron-right"></i>
                    <span>My Wishlist</span>
                </div>
                <div class="wishlist-header">
                    <div class="d-flex gap-2 align-items-center">
                        <i class="fa-solid fa-heart fa-2x" style="color: #6366f1;"></i>
                        <h2 class="page-title">My Wishlist (<%= wishlist ? wishlist.length : 0 %>)</h2>
                    </div>
                    <div class="wishlist-actions">
                        <% if (wishlist && wishlist.length > 0) { %>
                            <button class="btn btn-danger" data-action="/wishlist/empty"><i class="fas fa-trash-alt"></i> Empty Wishlist</button>
                        <% } %>
                    </div>
                </div>

                <div class="wishlist-grid">
                    <% if (wishlist && wishlist.length > 0) { %>
                        <% wishlist.forEach(item => { %>
                            <div class="product-card" data-product-id="<%= item.productId._id %>">
                                <% const mainImage = item.productId.images?.find(img => img.isMain); %>
                                
                                <!-- Variant Toggle Button -->
                                <% if (item.productId.variants && item.productId.variants.length > 0) { %>
                                    <button class="variant-toggle-btn" title="Select Variant">
                                        <i class="fas fa-cog"></i>
                                    </button>
                                <% } %>

                                <img src="<%= mainImage.url %>" alt="<%= item.productId.name %>" class="product-img">
                                
                                <div class="product-info">
                                    <h3 class="product-title"><%= item.productId.name %></h3>
                                    <div class="selected-variant-display text-sm text-gray-600 mt-1" style="display: none;"></div>
                                    
                                    <% if (item.productId.variants && item.productId.variants.length > 0) { %>
                                        <div class="variant-selector" data-product-id="<%= item.productId._id %>">
                                            <% 
                                            const ramOptions = [...new Set(item.productId.variants.map(v => v.RAM))];
                                            const storageOptions = [...new Set(item.productId.variants.map(v => v.Storage))];
                                            %>
                                            
                                            <% if (ramOptions.length > 1) { %>
                                                <div class="variant-group">
                                                    <label class="variant-label">RAM:</label>
                                                    <div class="variant-options" data-type="RAM">
                                                        <% ramOptions.forEach(ram => { %>
                                                            <% const variantsWithThisRAM = item.productId.variants.filter(v => v.RAM === ram); %>
                                                            <% const hasStock = variantsWithThisRAM.some(v => v.stock > 0); %>
                                                            <div class="variant-option <%= !hasStock ? 'out-of-stock' : '' %>" 
                                                                 data-value="<%= ram %>" 
                                                                 data-type="RAM">
                                                                <%= ram %>
                                                            </div>
                                                        <% }); %>
                                                    </div>
                                                </div>
                                            <% } %>

                                            <% if (storageOptions.length > 1) { %>
                                                <div class="variant-group">
                                                    <label class="variant-label">Storage:</label>
                                                    <div class="variant-options" data-type="Storage">
                                                        <% storageOptions.forEach(storage => { %>
                                                            <% const variantsWithThisStorage = item.productId.variants.filter(v => v.Storage === storage); %>
                                                            <% const hasStock = variantsWithThisStorage.some(v => v.stock > 0); %>
                                                            <div class="variant-option <%= !hasStock ? 'out-of-stock' : '' %>" 
                                                                 data-value="<%= storage %>" 
                                                                 data-type="Storage">
                                                                <%= storage %>
                                                            </div>
                                                        <% }); %>
                                                    </div>
                                                </div>
                                            <% } %>

                                            <div class="selected-variant-info">
                                                <div class="variant-price"></div>
                                                <div class="variant-stock"></div>
                                            </div>
                                        </div>
                                    <% } %>
                                    <%
                                      const productOffer = item.productId.offer || 0;
                                      const categoryOffer = item.productId.categoryId?.offer || 0;
                                      const discount = Math.max(productOffer, categoryOffer);
                                      const originalPrice = item.productId.salePrice || 0;
                                      const finalPrice = Math.round(originalPrice * (1 - discount / 100));
                                    %>

                                    <div class="product-price">
                                        <span class="price">â‚¹<%= finalPrice.toLocaleString() %></span>
                                        <% if (discount > 0) { %>
                                            <span class="discount"><%= discount %>% off</span>
                                           
                                        <% } %>
                                    </div>
                                    
                                    <div class="product-actions">
                                        <button class="product-btn cart-btn <%= item.productId.variants && item.productId.variants.length > 0 ? 'disabled' : '' %>"
                                            data-product-id="<%= item.productId._id %>"
                                            <%= item.productId.variants && item.productId.variants.length > 0 ? 'disabled' : '' %>>
                                            <i class="fas fa-shopping-cart"></i> Add To Cart
                                        </button>
                                        <% if (item.productId.variants && item.productId.variants.length > 0) { %>
                                            <div class="variant-required-text">Select variant options above</div>
                                        <% } %>
                                        <button class="product-btn remove-btn" data-product-id="<%= item.productId._id %>">
                                            <i class="fas fa-trash"></i> Remove
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="empty-wishlist">
                            <i class="fas fa-heart-broken fa-3x"></i>
                            <h3>Your wishlist is empty</h3>
                            <p>Items added to your wishlist will appear here</p>
                            <a href="/shop" class="btn btn-primary">Browse Products</a>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
        </div> 
    </div>
    <%- include("../partials/user/footer.ejs") %>

    <script>
      document.addEventListener('DOMContentLoaded', function () {
    if (typeof Swal === 'undefined') {
      console.error('SweetAlert2 is not loaded.');
      return;
    }

    const productVariants = {};
    const basePrices = {};
    const offers = {}; 

    <% if (wishlist && wishlist.length > 0) { %>
      <% wishlist.forEach(item => {
          const productOffer = item.productId.offer || 0;
          const categoryOffer = item.productId.categoryId?.offer || 0;
          const maxOffer = Math.max(productOffer, categoryOffer);
      %>
        <% if (item.productId.variants) { %>
          productVariants['<%= item.productId._id %>'] = <%- JSON.stringify(item.productId.variants) %>;
        <% } %>
        basePrices['<%= item.productId._id %>'] = <%= item.productId.salePrice %>;
        offers['<%= item.productId._id %>'] = <%= maxOffer %>; 
      <% }); %>
    <% } %>;
<!-- new -->
    const menuToggle = document.querySelector('.menu-toggle');
    const sidebar = document.querySelector('.sidebar');
    if (menuToggle && sidebar) {
      menuToggle.addEventListener('click', () => {
        sidebar.classList.toggle('active');
        document.body.classList.toggle('sidebar-open');
      });

      document.addEventListener('click', (e) => {
        if (sidebar.classList.contains('active') && !sidebar.contains(e.target) && e.target !== menuToggle) {
          sidebar.classList.remove('active');
          document.body.classList.remove('sidebar-open');
        }
      });
    }

    document.querySelectorAll('.variant-toggle-btn').forEach(btn => {
      btn.addEventListener('click', function (e) {
        e.stopPropagation();
        const productCard = this.closest('.product-card');
        const variantSelector = productCard.querySelector('.variant-selector');

        if (variantSelector) {
          variantSelector.classList.toggle('active');
          this.classList.toggle('active');
          const icon = this.querySelector('i');
          icon.className = variantSelector.classList.contains('active') ? 'fas fa-times' : 'fas fa-cog';
        }
      });
    });

    document.querySelectorAll('.variant-option').forEach(option => {
      option.addEventListener('click', function () {
        if (this.classList.contains('out-of-stock')) return;

        const productCard = this.closest('.product-card');
        const productId = productCard.dataset.productId;
        const variantType = this.dataset.type;

        this.parentElement.querySelectorAll('.variant-option').forEach(s => s.classList.remove('selected'));
        this.classList.add('selected');

        updateVariantSelection(productCard, productId);
      });
    });

    function updateVariantSelection(productCard, productId) {
      const selectedOptions = productCard.querySelectorAll('.variant-option.selected');
      const cartBtn = productCard.querySelector('.cart-btn');
      const variantInfo = productCard.querySelector('.selected-variant-info');

      if (!productVariants[productId]) return;

      const selectedValues = {};
      selectedOptions.forEach(option => {
        selectedValues[option.dataset.type] = option.dataset.value;
      });

      const matchingVariant = productVariants[productId].find(variant => {
        return Object.keys(selectedValues).every(key => variant[key] === selectedValues[key]);
      });

      const allSelected = productCard.querySelectorAll('.variant-group').length === Object.keys(selectedValues).length;

      if (allSelected && matchingVariant) {
        const basePrice = basePrices[productId] || 0;
        const priceAdjustment = matchingVariant.priceAdjustment || 0;

        const discount = offers[productId] || 0;
        const priceBeforeDiscount = basePrice + priceAdjustment;
        const variantPrice = Math.round(priceBeforeDiscount * (1 - discount / 100));

        cartBtn.disabled = false;
        cartBtn.classList.remove('disabled');
        cartBtn.innerHTML = '<i class="fas fa-shopping-cart"></i> Add To Cart';
        cartBtn.dataset.variantId = matchingVariant._id;

        const variantDisplay = productCard.querySelector('.selected-variant-display');
      if (variantDisplay) {
        variantDisplay.textContent = `${matchingVariant.RAM} / ${matchingVariant.Storage}`;
        variantDisplay.style.display = 'block';
      }

        if (variantInfo) {
          const priceElement = variantInfo.querySelector('.variant-price');
          const stockElement = variantInfo.querySelector('.variant-stock');

          if (priceElement) {
            priceElement.textContent = `Price: â‚¹${variantPrice.toLocaleString("en-IN")}`;
          }

          if (stockElement) {
            if (matchingVariant.stock > 0) {
              stockElement.textContent = `Stock: ${matchingVariant.stock} available`;
              stockElement.className = 'variant-stock';
            } else {
              stockElement.textContent = 'Out of stock';
              stockElement.className = 'out-of-stock-text';
              cartBtn.disabled = true;
              cartBtn.classList.add('disabled');
            }
          }

          variantInfo.classList.add('show');
        }

        const priceDisplay = productCard.querySelector('.price');
        if (priceDisplay) {
          priceDisplay.textContent = `â‚¹${variantPrice.toLocaleString("en-IN")}`;
        }

      } else {
        cartBtn.disabled = true;
        cartBtn.classList.add('disabled');
        cartBtn.innerHTML = '<i class="fas fa-shopping-cart"></i> Select All Variants';
        delete cartBtn.dataset.variantId;

        if (variantInfo) {
          variantInfo.classList.remove('show');
        }
      }
    }

    const emptyBtn = document.querySelector('.btn-danger');
    if (emptyBtn) {
      emptyBtn.addEventListener('click', function (e) {
        e.preventDefault();
        Swal.fire({
          title: 'Empty Wishlist?',
          text: "This will remove all products from your wishlist",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#d33',
          confirmButtonText: 'Yes, clear it!'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = "/wishlist/clear-wishlist";
          }
        });
      });
    }

    document.querySelectorAll('.cart-btn').forEach((btn) => {
      btn.addEventListener('click', function () {
        if (this.disabled) return;

        const productCard = this.closest('.product-card');
        const productId = productCard.getAttribute('data-product-id');
        const variantId = this.dataset.variantId;

        if (!productId) return Swal.fire('Error', 'Product ID missing.', 'error');

        this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
        this.disabled = true;

        const requestBody = { productId };
        if (variantId) requestBody.variantId = variantId;

        fetch('/wishlist/add-to-cart', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(requestBody),
        })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              productCard.style.transform = 'translateY(-20px)';
              productCard.style.opacity = '0';

              setTimeout(() => {
                Swal.fire({
                  title: 'Added to Cart!',
                  text: 'Product moved to cart',
                  icon: 'success',
                  timer: 1500,
                  showConfirmButton: false
                }).then(() => location.reload());
              }, 300);
            } else {
              this.innerHTML = '<i class="fas fa-shopping-cart"></i> Add To Cart';
              this.disabled = false;
              Swal.fire('Error', data.message || 'Add to cart failed', 'error');
            }
          })
          .catch(err => {
            this.innerHTML = '<i class="fas fa-shopping-cart"></i> Add To Cart';
            this.disabled = false;
            Swal.fire('Error', 'Server error: ' + err.message, 'error');
          });
      });
    });

    document.querySelectorAll('.remove-btn').forEach(btn => {
      btn.addEventListener('click', function () {
        const productCard = this.closest('.product-card');
        const productId = productCard.getAttribute('data-product-id');
        if (!productId) return Swal.fire('Error', 'Product ID not found.', 'error');

        Swal.fire({
          title: 'Remove this product?',
          icon: 'question',
          showCancelButton: true,
          confirmButtonColor: '#ff4c4c',
          confirmButtonText: 'Remove',
        }).then((result) => {
          if (result.isConfirmed) {
            this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Removing...';
            this.disabled = true;

            fetch(`/wishlist/remove/${productId}`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ productId }),
            })
              .then(res => res.json())
              .then(data => {
                if (data.success) {
                  productCard.style.transform = 'scale(0.9)';
                  productCard.style.opacity = '0';

                  setTimeout(() => {
                    productCard.remove();
                    const remaining = document.querySelectorAll('.product-card').length;
                    const counter = document.querySelector('.wishlist-header h2');
                    counter.textContent = `My Wishlist (${remaining})`;
                    if (remaining === 0) location.reload();
                  }, 300);
                } else {
                  this.innerHTML = '<i class="fas fa-trash"></i> Remove';
                  this.disabled = false;
                  Swal.fire('Error', data.message || 'Remove failed', 'error');
                }
              })
              .catch(err => {
                this.innerHTML = '<i class="fas fa-trash"></i> Remove';
                this.disabled = false;
                Swal.fire('Error', 'Server error: ' + err.message, 'error');
              });
          }
        });
      });
    });

    const buttons = document.querySelectorAll('.btn, .product-btn');
    buttons.forEach(button => {
      button.addEventListener('mouseenter', function () {
        if (!this.disabled) this.style.transform = 'translateY(-2px)';
      });
      button.addEventListener('mouseleave', function () {
        this.style.transform = 'translateY(0)';
      });
    });
  });
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js" integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO" crossorigin="anonymous"></script>
</body>
</html>