<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>Set Password<% } else { %>Change Password<% } %> - LapZone</title>
  <link rel="stylesheet" href="/css/header.css">
  <link rel="stylesheet" href="/css/profileSidebar.css">
  <link rel="stylesheet" href="/css/userChangePassword.css">
  <link rel="stylesheet" href="/css/universal-floating-elements.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>

<body>
  <div class="page-container">
    <%- include("../partials/user/header.ejs") %>
    
    <div class="main-body">
    <%- include("../partials/user/profileSidebar.ejs") %>

    <div class="main-content">
      <div class="password-form-section">
        <nav class="breadcrumb">
          <a href="/profile">
            <i class="fas fa-user"></i>
            Profile
          </a>
          <i class="fas fa-chevron-right"></i>
          <span>
            <% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>
              Set Password
            <% } else { %>
              Change Password
            <% } %>
          </span>
        </nav>

        <h1 class="page-title">
          <i class="fas fa-key" style="color: #6366f1;"></i>
          <% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>
            Set Password
          <% } else { %>
            Change Password
          <% } %>
        </h1>
        
        <div class="user-email">
          <i class="fas fa-envelope"></i>
          <%= user.email %>
        </div>

        <% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>
          <div class="info-message">
            <i class="fas fa-info-circle"></i>
            <div>
              <strong>Google Account Detected</strong><br>
              Your account was created with Google. Set a password to enable email/password login as an alternative to Google Sign-in.
            </div>
          </div>
        <% } %>

        <form action="/profile/change-password" method="POST" id="passwordForm">
          <% if (typeof isGoogleUser === 'undefined' || !isGoogleUser) { %>
          <div class="form-group">
            <label for="currentPassword">
              <i class="fas fa-lock"></i>
              Current Password
            </label>
            <div class="password-input-container">
              <input 
                type="password" 
                id="currentPassword" 
                name="currentPassword" 
                placeholder="Enter your current password"
                autocomplete="current-password" />
              <button type="button" class="password-toggle" onclick="togglePassword('currentPassword')">
                <i class="fas fa-eye" id="currentPasswordToggle"></i>
              </button>
            </div>
            <div class="error-field"><%= errors && errors.currentPassword ? errors.currentPassword : '' %></div>
          </div>
          <% } %>

          <div class="form-group">
            <label for="newPassword">
              <i class="fas fa-key"></i>
              <% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>
                Password
              <% } else { %>
                New Password
              <% } %>
            </label>
            <div class="password-input-container">
              <input 
                type="password" 
                id="newPassword" 
                name="newPassword" 
                placeholder="<% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>Enter your password<% } else { %>Enter your new password<% } %>"
                autocomplete="new-password" />
              <button type="button" class="password-toggle" onclick="togglePassword('newPassword')">
                <i class="fas fa-eye" id="newPasswordToggle"></i>
              </button>
            </div>
            <div class="password-strength">
              <div class="password-strength-bar" id="strengthBar"></div>
            </div>
            <div class="error-field"><%= errors && errors.newPassword ? errors.newPassword : '' %></div>
          </div>

          <div class="form-group">
            <label for="confirmPassword">
              <i class="fas fa-check-circle"></i>
              <% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>
                Confirm Password
              <% } else { %>
                Confirm New Password
              <% } %>
            </label>
            <div class="password-input-container">
              <input 
                type="password" 
                id="confirmPassword" 
                name="confirmPassword" 
                placeholder="<% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>Confirm your password<% } else { %>Confirm your new password<% } %>"
                autocomplete="new-password" />
              <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                <i class="fas fa-eye" id="confirmPasswordToggle"></i>
              </button>
            </div>
            <div class="error-field"><%= errors && errors.confirmPassword ? errors.confirmPassword : '' %></div>
          </div>

          <button type="submit" class="update-btn" id="submitBtn">
            <i class="fas fa-shield-alt"></i>
            <% if (typeof isGoogleUser !== 'undefined' && isGoogleUser) { %>
              Set Password
            <% } else { %>
              Update Password
            <% } %>
          </button>
        </form>

        <div class="password-requirements">
          <h4><i class="fas fa-list-check"></i> Password Requirements</h4>
          <ul>
            <li id="req-length">At least 8 characters long</li>
            <li id="req-lowercase">Contains at least one lowercase letter</li>
            <li id="req-uppercase">Contains at least one uppercase letter</li>
            <li id="req-number">Contains at least one number</li>
            <li id="req-special">Contains at least one special character (@$!%*?&)</li>
          </ul>
        </div>
      </div>
    </div>
    </div>
  </div>

  <%- include('../partials/user/footer.ejs') %>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js" integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q" crossorigin="anonymous"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('passwordForm');
      const submitBtn = document.getElementById('submitBtn');
      const newPassword = document.getElementById('newPassword');
      const confirmPassword = document.getElementById('confirmPassword');
      const strengthBar = document.getElementById('strengthBar');
      
      window.togglePassword = function(inputId) {
        const input = document.getElementById(inputId);
        const toggle = document.getElementById(inputId + 'Toggle');
        
        if (input.type === 'password') {
          input.type = 'text';
          toggle.classList.remove('fa-eye');
          toggle.classList.add('fa-eye-slash');
        } else {
          input.type = 'password';
          toggle.classList.remove('fa-eye-slash');
          toggle.classList.add('fa-eye');
        }
      };

      function validatePasswords() {
        const newPwd = newPassword.value;
        const confirmPwd = confirmPassword.value;
        
        if (newPwd && confirmPwd) {
          if (newPwd !== confirmPwd) {
            confirmPassword.classList.add('invalid');
            confirmPassword.classList.remove('valid');
            return false;
          } else {
            confirmPassword.classList.add('valid');
            confirmPassword.classList.remove('invalid');
            return true;
          }
        } else {
          confirmPassword.classList.remove('valid', 'invalid');
          return true;
        }
      }

      function calculatePasswordStrength(password) {
        let score = 0;
        const checks = [
          password.length >= 8,
          /[a-z]/.test(password),
          /[A-Z]/.test(password),
          /\d/.test(password),
          /[@$!%*?&]/.test(password)
        ];
        
        score = checks.filter(Boolean).length;
        
        if (score <= 1) return 'weak';
        if (score <= 2) return 'fair';
        if (score <= 3) return 'good';
        return 'strong';
      }

      function updatePasswordStrength() {
        const password = newPassword.value;
        const strength = calculatePasswordStrength(password);
        
        strengthBar.className = 'password-strength-bar';
        if (password.length > 0) {
          strengthBar.classList.add(strength);
        }
      }

      function updateRequirements() {
        const password = newPassword.value;
        const requirements = [
          { id: 'req-length', test: password.length >= 8 },
          { id: 'req-lowercase', test: /[a-z]/.test(password) },
          { id: 'req-uppercase', test: /[A-Z]/.test(password) },
          { id: 'req-number', test: /\d/.test(password) },
          { id: 'req-special', test: /[@$!%*?&]/.test(password) }
        ];
        
        requirements.forEach(req => {
          const element = document.getElementById(req.id);
          if (req.test) {
            element.classList.add('valid');
          } else {
            element.classList.remove('valid');
          }
        });
      }

      newPassword.addEventListener('input', function() {
        updatePasswordStrength();
        updateRequirements();
        validatePasswords();
      });

      confirmPassword.addEventListener('input', validatePasswords);

      form.addEventListener('submit', function(event) {
        const newPwd = newPassword.value;
        const confirmPwd = confirmPassword.value;
        
        if (newPwd !== confirmPwd) {
          event.preventDefault();
          
          confirmPassword.classList.add('invalid');
          confirmPassword.focus();
          
          const errorDiv = confirmPassword.parentNode.nextElementSibling;
          if (errorDiv && errorDiv.classList.contains('error-field')) {
            errorDiv.textContent = 'Passwords do not match';
          }
          
          return false;
        }

        submitBtn.classList.add('loading');
        submitBtn.disabled = true;
      });

      const firstInput = form.querySelector('input[type="password"]');
      if (firstInput) {
        firstInput.focus();
      }

      document.querySelectorAll('.password-toggle').forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
        });
      });
    });
  </script>
</body>

</html>