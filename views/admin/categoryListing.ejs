<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Table with Toggle</title>
    <link rel="stylesheet" href="/css/admindashboard.css">
    <link rel="stylesheet" href="/css/sidebar.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Include SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ef4444;
            transition: 0.4s;
            border-radius: 24px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 20px;
            width: 20px;
            left: 2px;
            bottom: 2px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
        }

        input:checked+.slider {
            background-color: #22c55e;
        }

        input:checked+.slider:before {
            transform: translateX(26px);
        }

        .search-container {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
            justify-content: flex-end
        }

        .search-container input {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 300px;
        }

        .search-container button {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .search-container .search-btn {
            background-color: #3085d6;
            color: white;
        }

        .search-container .clear-btn {
            background-color: #ef4444;
            color: white;
        }

        .offer {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .offer span {
            color: #ef4444;
            font-weight: 500;
            font-size: 0.875rem;
        }

        .offer .add {
            background-color: #6adb1f;
            color: black;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 4px;
            font-size: 0.75rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .offer .remove {
            background-color: #aa3737;
            color: #fff;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 4px;
            font-size: 0.75rem;
            cursor: pointer;
            transition: background-color 0.3s ease;

        }

        .offer button:hover {
            background-color: #111827;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 0.5rem;
            margin-top: 1rem;
        }

        .pagination a,
        .pagination span {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            text-decoration: none;
            color: #374151;
            font-size: 0.875rem;
        }

        .pagination a:hover {
            background-color: #e5e7eb;
        }

        .pagination .active {
            background-color: #3b82f6;
            color: white;
        }

        .pagination .disabled {
            color: #9ca3af;
            pointer-events: none;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
            align-items: center;
            justify-content: flex-start;
        }

        .action-buttons button {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 2rem;
            height: 2rem;
            border-radius: 0.375rem;
            transition: background-color 0.2s;
        }

        .action-buttons .edit {
            background-color: #3b82f6;
            color: white;
        }

        .action-buttons .edit:hover {
            background-color: #2563eb;
        }

        .action-buttons .delete {
            background-color: #ef4444;
            color: white;
        }

        .action-buttons .delete:hover {
            background-color: #dc2626;
        }

        .action-buttons svg {
            width: 1rem;
            height: 1rem;
        }
    </style>
</head>

<body>
    <div class="dashboard">
        <%- include("../partials/admin/sidebar.ejs") %>
            <main class="main-content">
                
                <div class="container mx-auto p-6">
                    <div class="flex justify-between items-center mb-4">
                        <h1 class="text-2xl font-bold">Category Management</h1>
                        <div class="search-container">
                            <form action="/admin/category" method="get" class="search-form">
                                <input type="text" name="search" placeholder="Search by name, email, or mobile..."
                                    value="<%= searchQuery || '' %>">
                                <button type="submit" class="search-btn">Search</button>
                                <button type="button" class="clear-btn"
                                    onclick="window.location.href='/admin/category'">Clear</button>
                            </form>
                        </div>
                        <button class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition"
                            onclick="window.location.href='/admin/category/add'">Add Category</button>
                    </div>
                    <div class="overflow-x-auto">
                        <table class="w-full bg-white rounded-lg shadow-md">
                            <thead>
                                <tr class="bg-gray-500 text-white">
                                    <th class="py-3 px-4 text-left">SNO</th>
                                    <th class="py-3 px-4 text-left">Category Name</th>
                                    
                                    <th class="py-3 px-4 text-left">Added</th>
                                    <th class="py-3 px-4 text-left">List/Unlist</th>
                                    <th class="py-3 px-4 text-left">Action</th>
                                    <th class="py-3 px-4 text-left">Offers</th>
                                </tr>
                            </thead>
                            <tbody id="categoryTableBody">
                                <% category.forEach((cat, index)=> { %>
                                    <tr class="border-b" data-cat-id="<%= cat._id %>">
                                        <td class="py-3 px-4">
                                            <%= index + 1 %>
                                        </td>
                                        <td class="py-3 px-4">
                                            <%= cat.name %>
                                        </td>
                                        
                                        <td class="py-3 px-4">
                                            <%= cat.addedDate.toLocaleString('en-IN', { dateStyle: 'medium' ,
                                                timeStyle: 'short' }) %>
                                        </td>

                                        <td class="py-3 px-4">
                                            <form id="toggleForm-<%= cat._id %>"
                                                action="/admin/category-list-unlist/<%= cat._id %>" Â  method="POST">
                                                <input type="hidden" name="isListed"
                                                    value="<%= cat.isListed ? 'true' : 'false' %>">
                                                <label class="toggle-switch">
                                                    <input type="checkbox" <%=cat.isListed ? 'checked' : '' %>
                                                    onchange="handleToggle(this, '<%= cat._id %>')">
                                                        <span class="slider"></span>
                                                </label>
                                            </form>
                                        </td>
                                        <td>
                                            <div class="action-buttons">
                                                <button class="edit" onclick="editCategory('<%= cat._id %>')">
                                                    <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                                        <path
                                                            d="M12.146 0.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                                                    </svg>
                                                </button>
                                                <button class="delete" onclick="deleteCategory('<%= cat._id %>')">
                                                    <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                                        <path
                                                            d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5. Previous message truncated...5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                                        <path fill-rule="evenodd"
                                                            d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11a1 1 0 0 1 0 2H2.5z" />
                                                    </svg>
                                                </button>
                                            </div>
                                        </td>
                                        <td class="offer">
                                            <% if (cat.offer) { %>
                                                <button class="remove" onclick="removeOffer('<%= cat._id %>')">Remove
                                                    Offer</button>
                                                <% } else { %>
                                                    <button class="add" onclick="addOffer('<%= cat._id %>')">Add
                                                        Offer</button>
                                                    <% } %>
                                                    <span>
                                                <%= cat.offer ? `${cat.offer}% OFF` : '' %>
                                            </span>
                                        </td>
                                    </tr>
                                    <% }) %>
                            </tbody>
                        </table>
                    </div>
                    <div class="pagination">
                        <% if (currentPage> 1) { %>
                            <a
                                href="/admin/category?page=<%= currentPage - 1 %>&search=<%= encodeURIComponent(searchQuery) %>">Previous</a>
                            <% } else { %>
                                <span class="disabled">Previous</span>
                                <% } %>

                                    <% for (let i=1; i <=totalPages; i++) { %>
                                        <a href="/admin/category?page=<%= i %>&search=<%= encodeURIComponent(searchQuery) %>"
                                            class="<%= currentPage === i ? 'active' : '' %>">
                                            <%= i %>
                                        </a>
                                        <% } %>

                                            <% if (currentPage < totalPages) { %>
                                                <a
                                                    href="/admin/category?page=<%= currentPage + 1 %>&search=<%= encodeURIComponent(searchQuery) %>">Next</a>
                                                <% } else { %>
                                                    <span class="disabled">Next</span>
                                                    <% } %>
                    </div>
                </div>
            </main>
    </div>

    <script>
        function handleToggle(checkbox, categoryId) {
            const isListed = checkbox.checked;
            const form = document.getElementById(`toggleForm-${categoryId}`);
            const isListedInput = form.querySelector('input[name="isListed"]');

            Swal.fire({
                title: 'Are you sure?',
                text: `Do you want to ${isListed ? 'list' : 'unlist'} this category?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!',
                cancelButtonText: 'Cancel',
            }).then((result) => {
                if (result.isConfirmed) {
                    // Update the hidden input value
                    isListedInput.value = isListed;
                    form.submit();
                } else {
                    // Revert checkbox state
                    checkbox.checked = !isListed;
                }
            });
        }

        function editCategory(categoryId) {
            window.location.href = `/admin/category/edit/${categoryId}`;
        }

        function deleteCategory(categoryId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/category/delete/${categoryId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    'Deleted!',
                                    'Category has been deleted.',
                                    'success'
                                ).then(() => {
                                    const row = document.querySelector(`tr[data-cat-id="${categoryId}"]`);
                                    if (row) {
                                        row.remove();
                                        updateSNOs();
                                    }
                                });
                            }
                            else {
                                Swal.fire(
                                    'Error!',
                                    data.message || 'Failed to delete category.',
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            console.error('Error deleting category:', error);
                            Swal.fire(
                                'Error!',
                                'An error occurred while deleting the category.',
                                'error'
                            );
                        });
                }
            });
        }

        function updateSNOs() {
            const rows = document.querySelectorAll('#categoryTableBody tr');
            rows.forEach((row, index) => {
                const snoCell = row.querySelector('td:first-child');
                if (snoCell) {
                    snoCell.textContent = index + 1;
                }
            });
        }

        function addOffer(categoryId) {
            Swal.fire({
                title: 'Add Offer',
                text: 'Enter offer percentage (0-100):',
                input: 'number',
                inputAttributes: {
                    min: 0,
                    max: 100,
                    step: 1
                },
                showCancelButton: true,
                confirmButtonText: 'Add Offer',
                cancelButtonText: 'Cancel',
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                inputValidator: (value) => {
                    if (!value || value < 0 || value > 100) {
                        return 'Please enter a valid percentage (0-100)';
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    const offerPercentage = parseInt(result.value);
                    fetch(`/admin/category/add-offer/${categoryId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ offer: offerPercentage })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    'Success!',
                                    `Offer of ${offerPercentage}% added.`,
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    'Failed to add offer.',
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            console.error('Error adding offer:', error);
                            Swal.fire(
                                'Error!',
                                'An error occurred while adding the offer.',
                                'error'
                            );
                        });
                }
            });
        }

        function removeOffer(categoryId){

            Swal.fire({
                title: 'Remove Offer',
                text: 'Are you sure you want to remove the offer?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/category/remove-offer/${categoryId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire(
                                'Success!',
                                'Offer has been removed.',
                                'success'
                            ).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                'Failed to remove offer.',
                                'error'
                            );
                        }
                    })
                    .catch(error => {
                        console.error('Error removing offer:', error);
                        Swal.fire(
                            'Error!',
                            'An error occurred while removing the offer.',
                            'error'
                        );
                    });
                }
            });

        }
    </script>
</body>

</html>